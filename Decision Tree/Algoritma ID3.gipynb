{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Algoritma ID3.gipynb","provenance":[],"mount_file_id":"14qoLklWnS9l4uJBewaDPS6Hba28ueZHY","authorship_tag":"ABX9TyPX8Oo9O1jWvsKvI0l3z9Y9"},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"code","metadata":{"id":"i6idrK51UBkG","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1597282882006,"user_tz":-420,"elapsed":1048,"user":{"displayName":"Ahmad Habib","photoUrl":"","userId":"07615486812975318675"}}},"source":["import numpy as np\n","import pandas as pd\n","eps = np.finfo(float).eps\n","from numpy import log2 as log"],"execution_count":29,"outputs":[]},{"cell_type":"code","metadata":{"id":"Pb-imQoDURd_","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1597284798347,"user_tz":-420,"elapsed":1016,"user":{"displayName":"Ahmad Habib","photoUrl":"","userId":"07615486812975318675"}}},"source":["df = pd.read_excel('/content/drive/My Drive/FolderBaru/Decision Tree/Tabel Untuk Latihan Menghitung Entropy.xlsx')\n","df.columns = df.columns.str.replace(\" \",\"_\").str.lower()"],"execution_count":80,"outputs":[]},{"cell_type":"code","metadata":{"id":"GkcaoSY9Ubs-","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":395},"executionInfo":{"status":"ok","timestamp":1597282893320,"user_tz":-420,"elapsed":723,"user":{"displayName":"Ahmad Habib","photoUrl":"","userId":"07615486812975318675"}},"outputId":"95f9f2a9-13f9-458e-8fdf-9deb09f64ff6"},"source":["df.groupby(['kamera','harga','layak_rekomendasi']).count()"],"execution_count":31,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th>handphone</th>\n","      <th>baterai</th>\n","    </tr>\n","    <tr>\n","      <th>kamera</th>\n","      <th>harga</th>\n","      <th>layak_rekomendasi</th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th rowspan=\"2\" valign=\"top\">Rendah</th>\n","      <th>Mahal</th>\n","      <th>Tidak</th>\n","      <td>2</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>Sangat Mahal</th>\n","      <th>Tidak</th>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"4\" valign=\"top\">Sedang</th>\n","      <th rowspan=\"2\" valign=\"top\">Mahal</th>\n","      <th>Tidak</th>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>YA</th>\n","      <td>2</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>Murah</th>\n","      <th>Tidak</th>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>Sangat Mahal</th>\n","      <th>YA</th>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"4\" valign=\"top\">Tinggi</th>\n","      <th>Murah</th>\n","      <th>YA</th>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"2\" valign=\"top\">Sangat Mahal</th>\n","      <th>Tidak</th>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>YA</th>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>Sangat Murah</th>\n","      <th>YA</th>\n","      <td>3</td>\n","      <td>3</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["                                       handphone  baterai\n","kamera harga        layak_rekomendasi                    \n","Rendah Mahal        Tidak                      2        2\n","       Sangat Mahal Tidak                      1        1\n","Sedang Mahal        Tidak                      1        1\n","                    YA                         2        2\n","       Murah        Tidak                      1        1\n","       Sangat Mahal YA                         1        1\n","Tinggi Murah        YA                         1        1\n","       Sangat Mahal Tidak                      1        1\n","                    YA                         1        1\n","       Sangat Murah YA                         3        3"]},"metadata":{"tags":[]},"execution_count":31}]},{"cell_type":"code","metadata":{"id":"WaYX5HY_Ur_V","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1597284824037,"user_tz":-420,"elapsed":1400,"user":{"displayName":"Ahmad Habib","photoUrl":"","userId":"07615486812975318675"}}},"source":["def find_entropy(df):\n","    Class = df.keys()[-1]   #To make the code generic, changing target variable class name\n","    entropy = 0\n","    values = df[Class].unique()\n","    for value in values:\n","        fraction = df[Class].value_counts()[value]/len(df[Class])\n","        entropy += -fraction*np.log2(fraction)\n","    return entropy\n","  \n","  \n","def find_entropy_attribute(df,attribute):\n","  Class = df.keys()[-1]   #To make the code generic, changing target variable class name\n","  target_variables = df[Class].unique()  #This gives all 'Yes' and 'No'\n","  variables = df[attribute].unique()    #This gives different features in that attribute (like 'Hot','Cold' in Temperature)\n","  entropy2 = 0\n","  for variable in variables:\n","      entropy = 0\n","      for target_variable in target_variables:\n","          num = len(df[attribute][df[attribute]==variable][df[Class] ==target_variable])\n","          den = len(df[attribute][df[attribute]==variable])\n","          fraction = num/(den+eps)\n","          entropy += -fraction*log(fraction+eps)\n","      fraction2 = den/len(df)\n","      entropy2 += -fraction2*entropy\n","  return abs(entropy2)\n","\n","\n","def find_winner(df):\n","    Entropy_att = []\n","    IG = []\n","    for key in df.keys()[1:-1]:\n","#         Entropy_att.append(find_entropy_attribute(df,key))\n","        IG.append(find_entropy(df)-find_entropy_attribute(df,key))\n","    return df.keys()[1:-1][np.argmax(IG)]\n","  \n","  \n","def get_subtable(df, node,value):\n","  return df[df[node] == value].reset_index(drop=True)\n","\n","\n","def buildTree(df,tree=None): \n","    Class = df.keys()[-1]   #To make the code generic, changing target variable class name\n","    \n","    #Here we build our decision tree\n","\n","    #Get attribute with maximum information gain\n","    node = find_winner(df)\n","    \n","    #Get distinct value of that attribute e.g Salary is node and Low,Med and High are values\n","    attValue = np.unique(df[node])\n","    \n","    #Create an empty dictionary to create tree    \n","    if tree is None:                    \n","        tree={}\n","        tree[node] = {}\n","    \n","   #We make loop to construct a tree by calling this function recursively. \n","    #In this we check if the subset is pure and stops if it is pure. \n","\n","    for value in attValue:\n","        \n","        subtable = get_subtable(df,node,value)\n","        clValue,counts = np.unique(subtable[Class],return_counts=True)                        \n","        \n","        if len(counts)==1:#Checking purity of subset\n","            tree[node][value] = clValue[0]                                                    \n","        else:        \n","            tree[node][value] = buildTree(subtable) #Calling the function recursively \n","                   \n","    return tree"],"execution_count":83,"outputs":[]},{"cell_type":"code","metadata":{"id":"6SmEbuHMjDpq","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":109},"executionInfo":{"status":"ok","timestamp":1597284829670,"user_tz":-420,"elapsed":1204,"user":{"displayName":"Ahmad Habib","photoUrl":"","userId":"07615486812975318675"}},"outputId":"c18f4df4-dd5d-4599-934a-d4d7dd9dbc43"},"source":["buildTree(df)"],"execution_count":84,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'kamera': {'Rendah': 'Tidak',\n","  'Sedang': {'baterai': {'Cukup': 'YA', 'Kuat': 'YA', 'Lemah': 'Tidak'}},\n","  'Tinggi': {'baterai': {'Cukup': 'YA',\n","    'Kuat': 'YA',\n","    'Lemah': {'harga': {'Sangat Mahal': 'Tidak', 'Sangat Murah': 'YA'}}}}}}"]},"metadata":{"tags":[]},"execution_count":84}]},{"cell_type":"code","metadata":{"id":"d-3L6tetjYnQ","colab_type":"code","colab":{}},"source":[""],"execution_count":null,"outputs":[]}]}